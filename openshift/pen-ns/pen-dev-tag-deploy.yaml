---
apiVersion: v1
kind: Template
labels: 
  template: pen-dev-template
metadata: 
  name: pen-dev-template
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata: 
    name: "pen-dev-pipeline"
  spec:
    strategy:
      jenkinsPipelineStrategy:
        jenkinsfile: | 
         def IDIR = 'NONE'
         def IDIR_PW = 'NONE'
         def STUDENT_PROFILE_SAGA_API_VERSION = '<Not Required>'
         def STAFF_ADMIN_VERSION = '<Not Required>'
         def STUDENT_PROFILE_VERSION = '<Not Required>'
         def STUDENT_PROFILE_EMAIL_API_VERSION = '<Not Required>'
         
         def TOOLS = 'c2mvws-tools'
         def TARGET_ENVIRONMENT = 'c2mvws-dev'
         def JOB_NAME = 'master'
         def STAGING_ENV = 'Dev'
         def TARGET_ENV = 'dev'
         def APP_DOMAIN = 'pathfinder.gov.bc.ca'

         pipeline {
             environment {
         	  NAMESPACE='c2mvws'
         	  COMMON_NAMESPACE='mvubjx'
             }
             agent any
         	stages {
         		stage('Select Versions for Deployment') {
         			steps {
         				script {
         					// Get the input
         					def tagInput = input(
         							id: 'tagInput', message: 'Please enter the version number for each component to be tagged/deployed:',
         							parameters: [
         
         									string(defaultValue: "",
         											description: 'Enter Staff Admin Version, leave the tag blank if this service is not to be deployed',
         											name: 'STAFF_ADMIN_VERSION'),
         									string(defaultValue: "",
         											description: 'Enter Student Profile Version, leave the tag blank if this service is not to be deployed',
         											name: 'STUDENT_PROFILE_VERSION'),
                          string(defaultValue: "",
                              description: 'Enter Student Profile Email API Version, leave the tag blank if this service is not to be deployed',
                              name: 'STUDENT_PROFILE_EMAIL_API_VERSION'),
         									string(defaultValue: "",
         											description: 'Enter Student Profile Saga API version, leave the tag blank if this service is not to be deployed',
         											name: 'STUDENT_PROFILE_SAGA_API_VERSION'),
         							])
         					// Save to variables. Default to empty string if not found.
                            STUDENT_PROFILE_SAGA_API_VERSION = tagInput.STUDENT_PROFILE_SAGA_API_VERSION?:''
         					STAFF_ADMIN_VERSION = tagInput.STAFF_ADMIN_VERSION?:''
         					STUDENT_PROFILE_VERSION = tagInput.STUDENT_PROFILE_VERSION?:''
         					STUDENT_PROFILE_EMAIL_API_VERSION = tagInput.STUDENT_PROFILE_EMAIL_API_VERSION?:''
         				}
         			}
         		}
         		stage('Download setup files'){
         		  steps{
         			  script{
         				  dir('tools/jenkins'){
         					  sh "curl -s https://raw.githubusercontent.com/bcgov/EDUC-INFRA-COMMON/master/openshift/pipelines/common/download-kc.sh | bash -s c2mvws"
                           }
         			  }
         		  }
         		}
         		stage('Student Profile Saga API'){
         			when {
         				expression {
         					return "${STUDENT_PROFILE_SAGA_API_VERSION}" != "<Not Required>" && "${STUDENT_PROFILE_SAGA_API_VERSION}" != "";
         				}
         			}
         			environment {
         			   APP_NAME = "student-profile-saga-api"
         			   DC_URL = "https://raw.githubusercontent.com/bcgov/EDUC-STUDENT-PROFILE-SAGA-API/master/tools/openshift/api.dc.yaml"
                     }
         			steps {
                  deployPatroniSecrets(TARGET_ENV, TARGET_ENVIRONMENT)
                  deployPatroni(TARGET_ENV, TARGET_ENVIRONMENT)
         			    deployStage(STAGING_ENV, TARGET_ENVIRONMENT, 'educ-student-profile-saga-api', 'student-profile-saga-api', JOB_NAME, "${STUDENT_PROFILE_SAGA_API_VERSION}", TOOLS, TARGET_ENVIRONMENT, APP_DOMAIN, "${DC_URL}", "1", "1", "30m", "300m", "650Mi", "750Mi", TARGET_ENV)
         			    configMapSetup("${APP_NAME}","${APP_NAME}".toUpperCase(), NAMESPACE);
                         script{
                            dir('tools/jenkins'){
                               sh "curl -s https://raw.githubusercontent.com/bcgov/EDUC-STUDENT-PROFILE-SAGA-API/master/tools/jenkins/update-configmap.sh | bash -s dev $APP_NAME $NAMESPACE $COMMON_NAMESPACE"
                            }
                         }
                        deployStageNoTag(STAGING_ENV, TARGET_ENVIRONMENT, 'educ-student-profile-saga-api', 'student-profile-saga-api', JOB_NAME, "${STUDENT_PROFILE_SAGA_API_VERSION}", TOOLS, TARGET_ENVIRONMENT, APP_DOMAIN, "${DC_URL}", "1", "1", "30m", "300m", "650Mi", "750Mi", TARGET_ENV)
                     }
         		}
         		stage('Student Admin Frontend and Backend'){
         			when {
         				expression {
         					return "${STAFF_ADMIN_VERSION}" != "<Not Required>" && "${STAFF_ADMIN_VERSION}" != "";
         				}
         			}
         			environment {
         			   APP_NAME = "student-admin"
         			   DC_URL_FRONTEND = "https://raw.githubusercontent.com/bcgov/EDUC-STUDENT-ADMIN/master/tools/openshift/frontend-static.dc.yaml"
         			   DC_URL_BACKEND = "https://raw.githubusercontent.com/bcgov/EDUC-STUDENT-ADMIN/master/tools/openshift/backend.dc.yaml"
                     }
         			steps {
         			    deployUIStage(STAGING_ENV, TARGET_ENVIRONMENT, 'educ-student-admin', 'student-admin', JOB_NAME, "${STAFF_ADMIN_VERSION}", TOOLS, TARGET_ENVIRONMENT, APP_DOMAIN, "${DC_URL_FRONTEND}", "${DC_URL_BACKEND}", "1", "1", "25m", "50m", "150Mi", "250Mi")
                         script{
                            dir('tools/jenkins'){
                               sh "curl -s https://raw.githubusercontent.com/bcgov/EDUC-STUDENT-ADMIN/master/tools/jenkins/update-configmap.sh | bash -s dev $APP_NAME $NAMESPACE $COMMON_NAMESPACE"
                            }
                         }
                     }
         		}
         		stage('Student Profile Email API'){
         			when {
         				expression {
         					return "${STUDENT_PROFILE_EMAIL_API_VERSION}" != "<Not Required>" && "${STUDENT_PROFILE_EMAIL_API_VERSION}" != "";
         				}
         			}
         			environment {
         			   APP_NAME = "student-profile-email-api"
         			   DC_URL = "https://raw.githubusercontent.com/bcgov/EDUC-STUDENT-PROFILE-EMAIL-API/master/tools/openshift/api.dc.yaml"
                     }
         			steps {
         			    deployStageNoEnv(STAGING_ENV, TARGET_ENVIRONMENT, 'educ-student-profile-email-api', 'student-profile-email-api', JOB_NAME, "${STUDENT_PROFILE_EMAIL_API_VERSION}", TOOLS, TARGET_ENVIRONMENT, APP_DOMAIN, "${DC_URL}", "1", "1", "30m", "300m", "650Mi", "750Mi")
         			    configMapChesSetup("${APP_NAME}","${APP_NAME}".toUpperCase(), NAMESPACE);
                         script{
                            dir('tools/jenkins'){
                               sh "curl -s https://raw.githubusercontent.com/bcgov/EDUC-STUDENT-PROFILE-EMAIL-API/master/tools/jenkins/update-configmap.sh | bash -s dev $APP_NAME $NAMESPACE $COMMON_NAMESPACE"
                            }
                         }
                         deployStageNoTagNoEnv(STAGING_ENV, TARGET_ENVIRONMENT, 'educ-student-profile-email-api', 'student-profile-email-api', JOB_NAME, "${STUDENT_PROFILE_EMAIL_API_VERSION}", TOOLS, TARGET_ENVIRONMENT, APP_DOMAIN, "${DC_URL}", "1", "1", "30m", "300m", "650Mi", "750Mi")
                     }
         		}
         		stage('Student Profile Frontend and Backend'){
         			when {
         				expression {
         					return "${STUDENT_PROFILE_VERSION}" != "<Not Required>" && "${STUDENT_PROFILE_VERSION}" != "";
         				}
         			}
         			environment {
         			   APP_NAME = "student-profile"
         			   DC_URL_FRONTEND = "https://raw.githubusercontent.com/bcgov/EDUC-STUDENT-PROFILE/master/tools/openshift/frontend-static.dc.yaml"
         			   DC_URL_BACKEND = "https://raw.githubusercontent.com/bcgov/EDUC-STUDENT-PROFILE/master/tools/openshift/backend.dc.yaml"
                     }
         			steps {
         			    deployUIStage(STAGING_ENV, TARGET_ENVIRONMENT, 'educ-student-profile', 'student-profile', JOB_NAME, "${STUDENT_PROFILE_VERSION}", TOOLS, TARGET_ENVIRONMENT, APP_DOMAIN, "${DC_URL_FRONTEND}", "${DC_URL_BACKEND}", "1", "1", "25m", "50m", "150Mi", "250Mi")
                         script{
                            dir('tools/jenkins'){
                               sh "curl -s https://raw.githubusercontent.com/bcgov/EDUC-STUDENT-PROFILE/master/tools/jenkins/update-configmap.sh | bash -s dev $APP_NAME $NAMESPACE $COMMON_NAMESPACE"
                            }
                         }
                     }
         		}
         	}
         }
