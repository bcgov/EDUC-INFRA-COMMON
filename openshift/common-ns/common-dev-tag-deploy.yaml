---
apiVersion: v1
kind: Template
labels: 
  template: dev-template
metadata: 
  name: dev-template
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata: 
    name: "dev-pipeline"
  spec:
    strategy:
      jenkinsPipelineStrategy:
        jenkinsfile: | 
         def IDIR = 'NONE'
         def IDIR_PW = 'NONE'
         def DIGITAL_ID_API_VERSION = '<Not Required>'
         def PEN_DEMOG_API_VERSION = '<Not Required>'
         def PEN_REQUEST_API_VERSION = '<Not Required>'
         def SERVICES_CARD_API_VERSION = '<Not Required>'
         def SOAM_API_VERSION = '<Not Required>'
         def STUDENT_API_VERSION = '<Not Required>'
         def STUDENT_PROFILE_API_VERSION = '<Not Required>'

         def TOOLS = 'mvubjx-tools'
         def TARGET_ENVIRONMENT = 'mvubjx-dev'
         def TARGET_ENV = 'dev'
         def JOB_NAME = 'master'
         def STAGING_ENV = 'Dev'
         def APP_DOMAIN = 'pathfinder.gov.bc.ca'
         
         pipeline {
             environment {
              extJSHelper = '';
         	  NAMESPACE='mvubjx'
         	  DEV_EXCHANGE_REALM='v45fd2kb'
              MIN_REPLICAS = "1"
              MAX_REPLICAS = "1"
              MIN_CPU = "30m"
              MAX_CPU = "300m"
              MIN_MEM = "650Mi"
              MAX_MEM = "750Mi"    
             }
             agent any
         	 stages {
         		stage('Select Versions for Deployment') {
         			steps {
         				script {
         					// Get the input
         					def tagInput = input(
         							id: 'tagInput', message: 'Please enter the version number for each component to be tagged/deployed:',
         							parameters: [
         
         									string(defaultValue: "",
         											description: 'Enter Digital Identity API Version, leave the tag blank if this service is not to be deployed',
         											name: 'DIGITAL_ID_API_VERSION'),
         									string(defaultValue: "",
         											description: 'Enter PEN Demog API Version, leave the tag blank if this service is not to be deployed',
         											name: 'PEN_DEMOG_API_VERSION'),
         									string(defaultValue: "",
         											description: 'Enter PEN Request API Version, leave the tag blank if this service is not to be deployed',
         											name: 'PEN_REQUEST_API_VERSION'),
         									string(defaultValue: "",
         											description: 'Enter Services Card API Version, leave the tag blank if this service is not to be deployed',
         											name: 'SERVICES_CARD_API_VERSION'),
         									string(defaultValue: "",
         											description: 'Enter SOAM API Version, leave the tag blank if this service is not to be deployed',
         											name: 'SOAM_API_VERSION'),
         									string(defaultValue: "",
         											description: 'Enter Student API Version, leave the tag blank if this service is not to be deployed',
         											name: 'STUDENT_API_VERSION'),
         									string(defaultValue: "",
         											description: 'Enter Staff Admin Version, leave the tag blank if this service is not to be deployed',
         											name: 'STUDENT_PROFILE_API_VERSION'),
         							])
         					// Save to variables. Default to empty string if not found.
         					DIGITAL_ID_API_VERSION = tagInput.DIGITAL_ID_API_VERSION?:''
         					PEN_DEMOG_API_VERSION = tagInput.PEN_DEMOG_API_VERSION?:''
         					PEN_REQUEST_API_VERSION = tagInput.PEN_REQUEST_API_VERSION?:''
         					SERVICES_CARD_API_VERSION = tagInput.SERVICES_CARD_API_VERSION?:''
         					SOAM_API_VERSION = tagInput.SOAM_API_VERSION?:''
         					STUDENT_API_VERSION = tagInput.STUDENT_API_VERSION?:''
         					STUDENT_PROFILE_API_VERSION = tagInput.STUDENT_PROFILE_API_VERSION?:''
         				}
         			}
         		}
         		stage('Download setup files'){
         		  steps{
         			  script{
         				  dir('tools/jenkins'){
         					  sh "curl -s https://raw.githubusercontent.com/bcgov/EDUC-INFRA-COMMON/master/openshift/common-deployment/download-kc.sh | bash /dev/stdin \"${NAMESPACE}\""
                           }
         			  }
         		  }
         		}
         		stage('Initialize deploy library'){
         		  steps{
         			  script{
                         sh "wget -O - https://raw.githubusercontent.com/bcgov/EDUC-INFRA-COMMON/master/openshift/common-deployment/deployHelpers.js > deployHelpers.js"
                         extJSHelper = evaluate readFile('deployHelpers.js')
         			  }
         		  }
         		}
         		stage('Digital ID API'){
         			when {
         				expression {
         					return "${DIGITAL_ID_API_VERSION}" != "<Not Required>" && "${DIGITAL_ID_API_VERSION}" != "";
         				}
         			}
         			environment {
         			   APP_NAME = "digitalid-api"
                       REPO_NAME = "educ-digitalid-api"
         			   DC_URL = "https://raw.githubusercontent.com/bcgov/EDUC-DIGITALID-API/master/tools/openshift/api.dc.yaml"
                     }
         			steps {
                      script{
                        extJSHelper.performApiDeploy(STAGING_ENV, TARGET_ENVIRONMENT, "${REPO_NAME}", APP_NAME, JOB_NAME, "${DIGITAL_ID_API_VERSION}", TOOLS, TARGET_ENVIRONMENT, APP_DOMAIN, "${DC_URL}", MIN_REPLICAS, MAX_REPLICAS, MIN_CPU, MAX_CPU, MIN_MEM, MAX_MEM, TARGET_ENV, NAMESPACE)
                      }
                     }
         		}
         		stage('PEN Demographics API'){
         			when {
         				expression {
         					return "${PEN_DEMOG_API_VERSION}" != "<Not Required>" && "${PEN_DEMOG_API_VERSION}" != "";
         				}
         			}
         			environment {
         			   APP_NAME = "pen-demographics-api"
                       REPO_NAME = "educ-pen-demog-api"
         			   DC_URL = "https://raw.githubusercontent.com/bcgov/EDUC-PEN-DEMOG-API/master/tools/openshift/api.dc.yaml"
                     }
         			steps {
                      script{
                        extJSHelper.performApiDeploy(STAGING_ENV, TARGET_ENVIRONMENT, "${REPO_NAME}", APP_NAME, JOB_NAME, "${PEN_DEMOG_API_VERSION}", TOOLS, TARGET_ENVIRONMENT, APP_DOMAIN, "${DC_URL}", MIN_REPLICAS, MAX_REPLICAS, MIN_CPU, MAX_CPU, MIN_MEM, MAX_MEM, TARGET_ENV, NAMESPACE)
                      }
                     }
         		}
         		stage('PEN Request API'){
         			when {
         				expression {
         					return "${PEN_REQUEST_API_VERSION}" != "<Not Required>" && "${PEN_REQUEST_API_VERSION}" != "";
         				}
         			}
         			environment {
         			   APP_NAME = "pen-request-api"
                       REPO_NAME = "educ-pen-request-api"
         			   DC_URL = "https://raw.githubusercontent.com/bcgov/EDUC-PEN-REQUEST-API/master/tools/openshift/api.dc.yaml"
                     }
         			steps {
                      script{
                        extJSHelper.performApiDeploy(STAGING_ENV, TARGET_ENVIRONMENT, "${REPO_NAME}", APP_NAME, JOB_NAME, "${PEN_REQUEST_API_VERSION}", TOOLS, TARGET_ENVIRONMENT, APP_DOMAIN, "${DC_URL}", MIN_REPLICAS, MAX_REPLICAS, MIN_CPU, MAX_CPU, MIN_MEM, MAX_MEM, TARGET_ENV, NAMESPACE)
                      }
                     }
         		}
         		stage('Services Card API'){
         			when {
         				expression {
         					return "${SERVICES_CARD_API_VERSION}" != "<Not Required>" && "${SERVICES_CARD_API_VERSION}" != "";
         				}
         			}
         			environment {
         			   APP_NAME = "services-card-api"
                       REPO_NAME = "educ-services-card-api"
         			   DC_URL = "https://raw.githubusercontent.com/bcgov/EDUC-SERVICES-CARD-API/master/tools/openshift/api.dc.yaml"
                     }
         			steps {
                      script{
                        extJSHelper.performApiDeploy(STAGING_ENV, TARGET_ENVIRONMENT, "${REPO_NAME}", APP_NAME, JOB_NAME, "${SERVICES_CARD_API_VERSION}", TOOLS, TARGET_ENVIRONMENT, APP_DOMAIN, "${DC_URL}", MIN_REPLICAS, MAX_REPLICAS, MIN_CPU, MAX_CPU, MIN_MEM, MAX_MEM, TARGET_ENV, NAMESPACE)
                      }
                     }
         		}
         		stage('Student API'){
         			when {
         				expression {
         					return "${STUDENT_API_VERSION}" != "<Not Required>" && "${STUDENT_API_VERSION}" != "";
         				}
         			}
         			environment {
         			   APP_NAME = "student-api"
                       REPO_NAME = "educ-student-api"
         			   DC_URL = "https://raw.githubusercontent.com/bcgov/EDUC-STUDENT-API/master/tools/openshift/api.dc.yaml"
                     }
         			steps {
                      script{
                        extJSHelper.performApiDeploy(STAGING_ENV, TARGET_ENVIRONMENT, "${REPO_NAME}", APP_NAME, JOB_NAME, "${STUDENT_API_VERSION}", TOOLS, TARGET_ENVIRONMENT, APP_DOMAIN, "${DC_URL}", MIN_REPLICAS, MAX_REPLICAS, MIN_CPU, MAX_CPU, MIN_MEM, MAX_MEM, TARGET_ENV, NAMESPACE)
                      }
                     }
         		}
         		stage('Student Profile API'){
         			when {
         				expression {
         					return "${STUDENT_PROFILE_API_VERSION}" != "<Not Required>" && "${STUDENT_PROFILE_API_VERSION}" != "";
         				}
         			}
         			environment {
         			   APP_NAME = "student-profile-api"
                       REPO_NAME = "educ-student-profile-api"
         			   DC_URL = "https://raw.githubusercontent.com/bcgov/EDUC-STUDENT-PROFILE-API/master/tools/openshift/api.dc.yaml"
                     }
         			steps {
                      script{
                        extJSHelper.performApiDeploy(STAGING_ENV, TARGET_ENVIRONMENT, "${REPO_NAME}", APP_NAME, JOB_NAME, "${STUDENT_PROFILE_API_VERSION}", TOOLS, TARGET_ENVIRONMENT, APP_DOMAIN, "${DC_URL}", MIN_REPLICAS, MAX_REPLICAS, MIN_CPU, MAX_CPU, MIN_MEM, MAX_MEM, TARGET_ENV, NAMESPACE)
                      }
                     }
         		}
         		stage('SOAM API'){
         			when {
         				expression {
         					return "${SOAM_API_VERSION}" != "<Not Required>" && "${SOAM_API_VERSION}" != "";
         				}
         			}
         			environment {
         			   APP_NAME = "soam-api"
                       REPO_NAME = "educ-soam-api"
         			   DC_URL = "https://raw.githubusercontent.com/bcgov/EDUC-SOAM-API/master/tools/openshift/api.dc.yaml"
                     }
         			steps {
                      script{
                        extJSHelper.performSoamApiDeploy(STAGING_ENV, TARGET_ENVIRONMENT, "${REPO_NAME}", APP_NAME, JOB_NAME, "${SOAM_API_VERSION}", TOOLS, TARGET_ENVIRONMENT, APP_DOMAIN, "${DC_URL}", MIN_REPLICAS, MAX_REPLICAS, MIN_CPU, MAX_CPU, MIN_MEM, MAX_MEM, TARGET_ENV, NAMESPACE)
                      }
                     }
         		}
         	}
         }