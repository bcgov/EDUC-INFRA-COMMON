pipeline {
  agent any

  environment {

    DEV = 'c2mvws-dev'
    TEST = 'c2mvws-test'
    PROD = 'c2mvws-prod'
  }

  stages {
    stage('Update route') {
      steps {
        script {
          openshift.withCluster() {
            openshift.withProject(PROD) {
              echo 'Pointing GetMyPen route back to GetMyPEN'
              openshift.patch("route/penvanityfrontend", '\'{"spec":{"to":{"name":"pen-request-frontend-master"}}}\'')
              openshift.patch("route/penvanityfrontend", '\'{"spec":{"port":{"targetPort":"2015-tcp"}}}\'')

              openshift.patch("route/penvanityfrontendwww", '\'{"spec":{"to":{"name":"pen-request-frontend-master"}}}\'')
              openshift.patch("route/penvanityfrontendwww", '\'{"spec":{"port":{"targetPort":"2015-tcp"}}}\'')
            }
          }
        }
      }
      post {
        success {
          echo 'Route successfully changed'
        }
        failure {
          echo 'Failed to change route'
        }
      }
    }
    /*stage('e2e tests') {
  agent {
    node {
      label 'nodejs10'
    }
  }
  steps {
    script {
      timeout(10) {
        dir('frontend') {
          echo 'Running e2e tests'
          sh 'npm install'
          sh 'npm run test:e2e'
        }
      }
    }
  }
}*/
    stage('Delete maintenance page') {
      steps {
        script {
          openshift.withCluster() {
            openshift.withProject(PROD) {
              echo "Deleting maintenance page..."
              openshift.selector( 'all', [ app:'maintenance-page' ] ).delete()
            }
          }
        }
      }
      post {
        success {
          echo 'Maintenance page deleted'
        }
        failure {
          echo 'Failed to delete maintenance page'
        }
      }
    }
  }
}
